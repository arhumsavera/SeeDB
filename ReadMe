We have tried to reproduce partial results from the methodology supplied by the authors of SeeDB, where the authors propose a visualization recommendation engine, which can be used as a middle layer on top of any database. Given a subset of data, it allows fast visual analysis. SeeDB explores the space of all possible visualizations for the given dataset and determines the ‘utility’ of a visualization, finally recommending the most promising ones. SeeDB uses sharing optimizations, which allows sharing of resources when querying a database and pruning optimizations, which removes visualizations which have very low utility. We have implemented the proposed algorithms via query rewriting (for shared-based optimizations), using Hoeffding-Serfling inequality for pruning-based optimization and by using K-L Divergence as our utility metric on the census dataset.

The data was obtained as one csv file. We set up a database using with a schema corresponding to the features in the original file. After loading the data, columns with missing values were set to NULL. As a requirement of our project was to compare visualizations of married people against unmarried people, some transformation was required. The marital-status column in the original data has different values such as divorced, separated and widowed etc. We decided to split the data into two groups. These splits were made in an effort to keep the data balanced and fair. The following describes our categorization of rows as married or unmarried:
Married:
• Married-civ-spouse
• Widowed
• Married-spouse-absent • Married-AF-spouse
• Separated
Unmarried:
• Divorced
• Never-married


A new database with a single table was created using Postgres. Development was done using Python 3.6. The following were the main packages used:
1. psycopg2: For database connectivity
2. Numpy: For numerical computation
3. Pandas: For easy manipulation of query results
4. Scipy: For using KL divergence



The aggregate functions considered are min, max, sum, avg and count. 
